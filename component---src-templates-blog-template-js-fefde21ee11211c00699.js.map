{"version":3,"sources":["webpack:///./src/components/blogMedia.js","webpack:///./src/templates/blogTemplate.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/headerMenu.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["SingleImg","styled","img","withConfig","displayName","componentId","CarousellWrapper","div","props","size","YoutubeTitle","Typography","WorkCard","_ref","mediaType","mediaSrc","mediaSrcList","mediaSrcSize","title","react_default","a","createElement","src","alt","variant","gutterBottom","lib","showStatus","dynamicHeight","autoPlay","infiniteLoop","map","index","style","background","key","__webpack_require__","d","__webpack_exports__","Template","pageQuery","BlogBodyWrapper","BlogBanner","BlogTitle","markdownRemark","data","frontmatter","html","layout","seo","banner","color","date","className","dangerouslySetInnerHTML","__html","blogMedia","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","MenuButton","Button","MenuLink","Link","HeaderMenu","buttons","_React$useState","useState","anchorEl","setAnchorEl","handleClose","length","to","path","aria-controls","aria-haspopup","onClick","event","currentTarget","Popover","id","keepMounted","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","_ref2","fullWidth","AppToolbar","Toolbar","AppToolbarIcon","AppToolbarIconImage","MenuButtonWrapper","Header","menus","AppBar","position","Card","gatsby_browser_entry","menu","headerMenu","siteTitle","Footer","footer","Layout","children","_777105802","Fragment","header","routes","margin","paddingTop","Date","getFullYear","node"],"mappings":"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","file":"component---src-templates-blog-template-js-fefde21ee11211c00699.js","sourcesContent":["import Typography from \"@material-ui/core/Typography\"\nimport React from \"react\"\nimport { Carousel } from \"react-responsive-carousel\"\nimport styled from \"styled-components\"\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"\n\nconst SingleImg = styled.img`\n  width: 86%;\n  margin-left: 12%;\n  margin-right: 12%;\n`\n\nconst CarousellWrapper = styled.div`\n  width: ${props => (props.size === \"small\" ? \"50%\" : \"70%\")};\n  margin-left: ${props => (props.size === \"small\" ? \"25%\" : \"15%\")};\n  margin-right: ${props => (props.size === \"small\" ? \"25%\" : \"15%\")};\n`\n\nconst YoutubeTitle = styled(Typography)`\n  font-weight: bold !important;\n`\n\nconst WorkCard = ({\n  mediaType,\n  mediaSrc,\n  mediaSrcList,\n  mediaSrcSize,\n  title,\n}) => (\n  <div>\n    {mediaType === \"single-image\" && <SingleImg src={mediaSrc} alt={title} />}\n    {mediaType === \"carousell-image\" && (\n      <div>\n        <YoutubeTitle variant=\"h5\" gutterBottom>\n          {\"Slide show\"}\n        </YoutubeTitle>\n        <br />\n        <CarousellWrapper size={mediaSrcSize}>\n          <Carousel\n            showStatus={false}\n            dynamicHeight={true}\n            autoPlay={true}\n            infiniteLoop={true}\n          >\n            {mediaSrcList.map((src, index) => (\n              <img\n                style={{ background: \"#ffffff\" }}\n                src={src}\n                alt={`${title}-${index}`}\n                key={index}\n              />\n            ))}\n          </Carousel>\n        </CarousellWrapper>\n      </div>\n    )}\n  </div>\n)\n\nexport default WorkCard\n","import Typography from \"@material-ui/core/Typography\"\nimport { graphql } from \"gatsby\"\nimport React from \"react\"\nimport styled from \"styled-components\"\n\nimport BlogMedia from \"../components/blogMedia\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst BlogBodyWrapper = styled.div`\n  min-width: 1400px;\n  padding-left: 200px;\n  padding-right: 200px;\n`\n\nconst BlogBanner = styled.img`\n  width: 100%;\n  height: 450px;\n  object-fit: cover;\n`\n\nconst BlogTitle = styled(Typography)`\n  font-weight: bold !important;\n`\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <Layout>\n      <SEO title={frontmatter.title} />\n      {frontmatter.banner ? (\n        <BlogBanner src={frontmatter.banner} alt={frontmatter.title} />\n      ) : (\n        <div>\n          <br />\n        </div>\n      )}\n      <BlogBodyWrapper>\n        <br />\n        <BlogTitle variant=\"h4\" gutterBottom>\n          {frontmatter.title}\n        </BlogTitle>\n        <Typography variant=\"h6\" gutterBottom style={{ color: \"#bdbdbd\" }}>\n          {frontmatter.date}\n        </Typography>\n        <br />\n        <Typography\n          variant=\"subtitle1\"\n          gutterBottom\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n        <BlogMedia {...frontmatter} />\n      </BlogBodyWrapper>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        path\n        title\n        date\n        banner\n        mediaType\n        mediaSrc\n        mediaSrcList\n        mediaSrcSize\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import Button from \"@material-ui/core/Button\"\nimport Popover from \"@material-ui/core/Popover\"\nimport { Link } from \"gatsby\"\nimport React from \"react\"\nimport styled from \"styled-components\"\n\nconst MenuButton = styled(Button)`\n  height: 110px;\n  padding-left: 15px !important;\n  padding-right: 15px !important;\n`\n\nconst MenuLink = styled(Link)`\n  color: black !important;\n  text-decoration: none !important;\n`\n\nconst HeaderMenu = ({ buttons, title }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  if (buttons.length === 1) {\n    return (\n      <MenuLink to={buttons[0].path}>\n        <MenuButton>{title}</MenuButton>\n      </MenuLink>\n    )\n  } else {\n    return [\n      <MenuButton\n        key=\"button\"\n        aria-controls=\"menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        {title}\n      </MenuButton>,\n      <Popover\n        id=\"menu\"\n        key=\"menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n      >\n        {buttons.map(({ title, path }, index) => (\n          <div key={index}>\n            <MenuLink to={path}>\n              <MenuButton onClick={handleClose} fullWidth={true}>\n                {title}\n              </MenuButton>\n            </MenuLink>\n          </div>\n        ))}\n      </Popover>,\n    ]\n  }\n}\n\nexport default HeaderMenu\n","import AppBar from \"@material-ui/core/AppBar\"\nimport Card from \"@material-ui/core/Card\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport styled from \"styled-components\"\n\nimport HeaderMenu from \"../components/headerMenu\"\n\nconst AppToolbar = styled(Toolbar)`\n  height: 110px;\n  background-color: white;\n`\n\nconst AppToolbarIcon = styled.div`\n  flex-grow: 1;\n  color: black;\n  text-decoration: none;\n`\n\nconst AppToolbarIconImage = styled.img`\n  margin-bottom: 0 !important;\n`\n\nconst MenuButtonWrapper = styled.div`\n  margin-right: 55px;\n`\n\nconst Header = ({ menus }) => (\n  <AppBar position=\"static\">\n    <Card>\n      <AppToolbar>\n        <AppToolbarIcon>\n          <Link to=\"/\">\n            <AppToolbarIconImage src=\"/header.png\" alt=\"home\" />\n          </Link>\n        </AppToolbarIcon>\n        <MenuButtonWrapper>\n          {menus.map((menu, index) => (\n            <HeaderMenu key={index} {...menu} />\n          ))}\n        </MenuButtonWrapper>\n      </AppToolbar>\n    </Card>\n  </AppBar>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport styled from \"styled-components\"\n\nimport Typography from \"@material-ui/core/Typography\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Footer = styled.footer`\n  height: 89px;\n  text-align: center;\n  padding-top: 29px;\n  text-transform: none;\n`\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          routes {\n            title\n            buttons {\n              title\n              path\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header menus={data.site.siteMetadata.routes} />\n      <div\n        style={{\n          margin: `0 auto`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <Footer>\n          <Typography variant=\"h6\">\n            {new Date().getFullYear()} Margaret Wong. All rights reserved.\n          </Typography>\n        </Footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}