{"version":3,"sources":["webpack:///./src/components/blogMedia.js","webpack:///./src/templates/blogTemplate.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/headerMenu.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["WorkCard","_ref","mediaType","mediaSrc","mediaSrcList","title","react_default","a","createElement","style","width","marginLeft","marginRight","src","alt","lib","showStatus","map","index","background","key","__webpack_require__","d","__webpack_exports__","Template","pageQuery","BlogBodyWrapper","styled","div","withConfig","displayName","componentId","markdownRemark","data","frontmatter","html","layout","seo","banner","height","objectFit","Typography","variant","gutterBottom","color","date","className","dangerouslySetInnerHTML","__html","blogMedia","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","MenuButton","Button","MenuLink","Link","HeaderMenu","buttons","_React$useState","useState","anchorEl","setAnchorEl","handleClose","length","to","path","aria-controls","aria-haspopup","onClick","event","currentTarget","Popover","id","keepMounted","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","_ref2","fullWidth","AppToolbar","Toolbar","AppToolbarIcon","AppToolbarIconImage","img","MenuButtonWrapper","Header","menus","AppBar","position","Card","gatsby_browser_entry","menu","headerMenu","siteTitle","Footer","footer","Layout","children","_777105802","Fragment","header","routes","margin","paddingTop","Date","getFullYear","node"],"mappings":"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","file":"component---src-templates-blog-template-js-2a501586297383a8ed42.js","sourcesContent":["import React from \"react\"\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"\nimport { Carousel } from \"react-responsive-carousel\"\n\nimport styled from \"styled-components\"\n\nconst WorkCard = ({ mediaType, mediaSrc, mediaSrcList, title }) => (\n  <div>\n    {mediaType === \"single-image\" && (\n      <img\n        style={{\n          width: \"86%\",\n          marginLeft: \"12%\",\n          marginRight: \"12%\",\n        }}\n        src={mediaSrc}\n        alt={title}\n      />\n    )}\n    {mediaType === \"carousell-image\" && (\n      <div\n        style={{\n          width: \"70%\",\n          marginLeft: \"15%\",\n          marginRight: \"15%\",\n        }}\n      >\n        <Carousel showStatus={false}>\n          {mediaSrcList.map((src, index) => (\n            <img\n              style={{ background: \"#ffffff\" }}\n              src={src}\n              alt={`${title}-${index}`}\n              key={index}\n            />\n          ))}\n        </Carousel>\n      </div>\n    )}\n  </div>\n)\n\nexport default WorkCard\n","import Typography from \"@material-ui/core/Typography\"\nimport { graphql } from \"gatsby\"\nimport React from \"react\"\nimport styled from \"styled-components\"\n\nimport BlogMedia from \"../components/blogMedia\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst BlogBodyWrapper = styled.div`\n  min-width: 1400px;\n  padding-left: 200px;\n  padding-right: 200px;\n`\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <Layout>\n      <SEO title={frontmatter.title} />\n      {frontmatter.banner ? (\n        <img\n          src={frontmatter.banner}\n          alt={frontmatter.title}\n          style={{ width: \"100%\", height: 450, objectFit: \"cover\" }}\n        />\n      ) : (\n        <div>\n          <br />\n          <br />\n        </div>\n      )}\n      <BlogBodyWrapper>\n        <Typography variant=\"h4\" gutterBottom>\n          {frontmatter.title}\n        </Typography>\n        <Typography variant=\"h6\" gutterBottom style={{ color: \"#bdbdbd\" }}>\n          {frontmatter.date}\n        </Typography>\n        <br />\n        <Typography\n          variant=\"subtitle1\"\n          gutterBottom\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n        <BlogMedia {...frontmatter} />\n      </BlogBodyWrapper>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        path\n        title\n        date\n        banner\n        mediaType\n        mediaSrc\n        mediaSrcList\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import Button from \"@material-ui/core/Button\"\nimport Popover from \"@material-ui/core/Popover\"\nimport { Link } from \"gatsby\"\nimport React from \"react\"\nimport styled from \"styled-components\"\n\nconst MenuButton = styled(Button)`\n  height: 110px;\n  padding-left: 15px !important;\n  padding-right: 15px !important;\n`\n\nconst MenuLink = styled(Link)`\n  color: black !important;\n  text-decoration: none !important;\n`\n\nconst HeaderMenu = ({ buttons, title }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  if (buttons.length === 1) {\n    return (\n      <MenuLink to={buttons[0].path}>\n        <MenuButton>{title}</MenuButton>\n      </MenuLink>\n    )\n  } else {\n    return [\n      <MenuButton\n        key=\"button\"\n        aria-controls=\"menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        {title}\n      </MenuButton>,\n      <Popover\n        id=\"menu\"\n        key=\"menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n      >\n        {buttons.map(({ title, path }, index) => (\n          <div key={index}>\n            <MenuLink to={path}>\n              <MenuButton onClick={handleClose} fullWidth={true}>\n                {title}\n              </MenuButton>\n            </MenuLink>\n          </div>\n        ))}\n      </Popover>,\n    ]\n  }\n}\n\nexport default HeaderMenu\n","import AppBar from \"@material-ui/core/AppBar\"\nimport Card from \"@material-ui/core/Card\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport styled from \"styled-components\"\n\nimport HeaderMenu from \"../components/headerMenu\"\n\nconst AppToolbar = styled(Toolbar)`\n  height: 110px;\n  background-color: white;\n`\n\nconst AppToolbarIcon = styled.div`\n  flex-grow: 1;\n  color: black;\n  text-decoration: none;\n`\n\nconst AppToolbarIconImage = styled.img`\n  margin-bottom: 0 !important;\n`\n\nconst MenuButtonWrapper = styled.div`\n  margin-right: 55px;\n`\n\nconst Header = ({ menus }) => (\n  <AppBar position=\"static\">\n    <Card>\n      <AppToolbar>\n        <AppToolbarIcon>\n          <Link to=\"/\">\n            <AppToolbarIconImage src=\"/header.png\" alt=\"home\" />\n          </Link>\n        </AppToolbarIcon>\n        <MenuButtonWrapper>\n          {menus.map((menu, index) => (\n            <HeaderMenu key={index} {...menu} />\n          ))}\n        </MenuButtonWrapper>\n      </AppToolbar>\n    </Card>\n  </AppBar>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport styled from \"styled-components\"\n\nimport Typography from \"@material-ui/core/Typography\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Footer = styled.footer`\n  height: 89px;\n  text-align: center;\n  padding-top: 29px;\n  text-transform: none;\n`\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          routes {\n            title\n            buttons {\n              title\n              path\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header menus={data.site.siteMetadata.routes} />\n      <div\n        style={{\n          margin: `0 auto`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <Footer>\n          <Typography variant=\"h6\">\n            {new Date().getFullYear()} Margaret Wong. All rights reserved.\n          </Typography>\n        </Footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}