{"version":3,"sources":["webpack:///./src/templates/blogTemplate.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/headerMenu.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Template","pageQuery","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","styled_components__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","BlogBodyWrapper","styled","div","withConfig","displayName","componentId","_ref","markdownRemark","data","frontmatter","html","a","createElement","title","banner","src","alt","style","width","height","objectFit","variant","gutterBottom","color","date","desc","className","dangerouslySetInnerHTML","__html","m","module","exports","require","default","ProdPageRenderer","location","pageResources","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","pathname","string","isRequired","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","object","createContext","func","MenuButton","Button","MenuLink","Link","HeaderMenu","buttons","_React$useState","useState","anchorEl","setAnchorEl","handleClose","length","react_default","to","path","key","aria-controls","aria-haspopup","onClick","event","currentTarget","Popover","id","keepMounted","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","map","_ref2","index","fullWidth","AppToolbar","Toolbar","AppToolbarIcon","AppToolbarIconImage","img","MenuButtonWrapper","Header","menus","AppBar","position","Card","gatsby_link_default","menu","headerMenu","siteTitle","Footer","footer","Layout","children","_777105802","Fragment","header","routes","margin","paddingTop","Typography","Date","getFullYear","node"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,8BAAAG,IAAA,IAAAC,EAAAN,EAAA,KAAAO,EAAAP,EAAA,GAAAQ,EAAAR,EAAAS,EAAAF,GAAAG,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAQMa,EAAkBC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,gCAAAC,YAAA,gBAAGJ,CAAH,8DAMN,SAASV,EAATe,GAEZ,IACOC,EADPD,EADDE,KAEQD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACrB,OACEf,EAAAgB,EAAAC,cAACd,EAAA,EAAD,KACEH,EAAAgB,EAAAC,cAACb,EAAA,EAAD,CAAKc,MAAOJ,EAAYI,QACvBJ,EAAYK,QACXnB,EAAAgB,EAAAC,cAAA,OACEG,IAAKN,EAAYK,OACjBE,IAAKP,EAAYI,MACjBI,MAAO,CAAEC,MAAO,OAAQC,OAAQ,IAAKC,UAAW,WAGpDzB,EAAAgB,EAAAC,cAACZ,EAAD,KACEL,EAAAgB,EAAAC,cAACnB,EAAA,EAAD,CAAY4B,QAAQ,KAAKC,cAAY,GAClCb,EAAYI,OAEflB,EAAAgB,EAAAC,cAACnB,EAAA,EAAD,CAAY4B,QAAQ,KAAKC,cAAY,EAACL,MAAO,CAAEM,MAAO,YACnDd,EAAYe,MAEf7B,EAAAgB,EAAAC,cAACnB,EAAA,EAAD,CAAY4B,QAAQ,YAAYC,cAAY,GACzCb,EAAYgB,MAEf9B,EAAAgB,EAAAC,cAAA,WACAjB,EAAAgB,EAAAC,cAACnB,EAAA,EAAD,CACE4B,QAAQ,YACRC,cAAY,EACZI,UAAU,oBACVC,wBAAyB,CAAEC,OAAQlB,OAOtC,IAAMlB,EAAS,iCCnDtB,IAAsBqC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,yfCKzCK,EAAmB,SAAA5B,GAAiC,IAA9B6B,EAA8B7B,EAA9B6B,SAAUC,EAAoB9B,EAApB8B,cACpC,OAAKA,EAGEC,IAAMzB,cAAc0B,IAApBC,OAAAC,OAAA,CACLL,WACAC,iBACGA,EAAcK,OALV,MASXP,EAAiBQ,UAAY,CAC3BP,SAAUQ,IAAUC,MAAM,CACxBC,SAAUF,IAAUG,OAAOC,aAC1BA,YAGUb,8GCVf,SAASc,EAAT1C,GAAiD,IAAlC2C,EAAkC3C,EAAlC2C,YAAaC,EAAqB5C,EAArB4C,KAAMC,EAAe7C,EAAf6C,KAAMtC,EAASP,EAATO,MAC9BuC,EADuCC,EAAA7C,KACvC4C,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACEtD,EAAAgB,EAAAC,cAAC4C,EAAA7C,EAAD,CACE8C,eAAgB,CACdP,QAEFrC,MAAOA,EACP6C,cAAa,QAAUN,EAAKG,aAAa1C,MACzCsC,KAAM,CACJ,CACEQ,KAAI,cACJC,QAASN,GAEX,CACEO,SAAQ,WACRD,QAAS/C,GAEX,CACEgD,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASR,EAAKG,aAAaO,QAE7B,CACEH,KAAI,gBACJC,QAAS/C,GAEX,CACE8C,KAAI,sBACJC,QAASN,IAEXS,OAAOZ,KAKfH,EAAIgB,aAAe,CACjBd,KAAI,KACJC,KAAM,GACNF,YAAW,IAGbD,EAAIN,UAAY,CACdO,YAAaN,IAAUG,OACvBI,KAAMP,IAAUG,OAChBK,KAAMR,IAAUsB,QAAQtB,IAAUuB,QAClCrD,MAAO8B,IAAUG,OAAOC,YAGXC,8aC1EYX,IAAM8B,cAAc,IAuDvCxB,IAAUuB,OACTvB,IAAUG,OAAOC,WAChBJ,IAAUyB,KACRzB,IAAUyB,2BCjEhBC,EAAapE,YAAOqE,KAAVnE,WAAA,CAAAC,YAAA,yBAAAC,YAAA,eAAGJ,CAAH,8EAMVsE,EAAWtE,YAAOuE,KAAVrE,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAAGJ,CAAH,6DA8DCwE,EAzDI,SAAAnE,GAAwB,IAArBoE,EAAqBpE,EAArBoE,QAAS7D,EAAYP,EAAZO,MAAY8D,EACTtC,IAAMuC,SAAS,MAAxCC,EADkCF,EAAA,GACxBG,EADwBH,EAAA,GAOnCI,EAAc,WAClBD,EAAY,OAGd,OAAuB,IAAnBJ,EAAQM,OAERC,EAAAtE,EAAAC,cAAC2D,EAAD,CAAUW,GAAIR,EAAQ,GAAGS,MACvBF,EAAAtE,EAAAC,cAACyD,EAAD,KAAaxD,IAIV,CACLoE,EAAAtE,EAAAC,cAACyD,EAAD,CACEe,IAAI,SACJC,gBAAc,OACdC,gBAAc,OACdC,QApBc,SAAAC,GAClBV,EAAYU,EAAMC,iBAqBb5E,GAEHoE,EAAAtE,EAAAC,cAAC8E,EAAA,EAAD,CACEC,GAAG,OACHP,IAAI,OACJP,SAAUA,EACVe,aAAW,EACXC,KAAMC,QAAQjB,GACdkB,QAAShB,EACTiB,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,SAGbxB,EAAQ0B,IAAI,SAAAC,EAAkBC,GAAlB,IAAGzF,EAAHwF,EAAGxF,MAAOsE,EAAVkB,EAAUlB,KAAV,OACXF,EAAAtE,EAAAC,cAAA,OAAKwE,IAAKkB,GACRrB,EAAAtE,EAAAC,cAAC2D,EAAD,CAAUW,GAAIC,GACZF,EAAAtE,EAAAC,cAACyD,EAAD,CAAYkB,QAASR,EAAawB,WAAW,GAC1C1F,UCtDX2F,EAAavG,YAAOwG,KAAVtG,WAAA,CAAAC,YAAA,qBAAAC,YAAA,eAAGJ,CAAH,0CAKVyG,EAAiBzG,IAAOC,IAAVC,WAAA,CAAAC,YAAA,yBAAAC,YAAA,eAAGJ,CAAH,mDAMd0G,EAAsB1G,IAAO2G,IAAVzG,WAAA,CAAAC,YAAA,8BAAAC,YAAA,eAAGJ,CAAH,iCAInB4G,EAAoB5G,IAAOC,IAAVC,WAAA,CAAAC,YAAA,4BAAAC,YAAA,eAAGJ,CAAH,wBAIjB6G,EAAS,SAAAxG,GAAA,IAAGyG,EAAHzG,EAAGyG,MAAH,OACb9B,EAAAtE,EAAAC,cAACoG,EAAA,EAAD,CAAQC,SAAS,UACfhC,EAAAtE,EAAAC,cAACsG,EAAA,EAAD,KACEjC,EAAAtE,EAAAC,cAAC4F,EAAD,KACEvB,EAAAtE,EAAAC,cAAC8F,EAAD,KACEzB,EAAAtE,EAAAC,cAACuG,EAAAxG,EAAD,CAAMuE,GAAG,KACPD,EAAAtE,EAAAC,cAAC+F,EAAD,CAAqB5F,IAAI,cAAcC,IAAI,WAG/CiE,EAAAtE,EAAAC,cAACiG,EAAD,KACGE,EAAMX,IAAI,SAACgB,EAAMd,GAAP,OACTrB,EAAAtE,EAAAC,cAACyG,EAAD9E,OAAAC,OAAA,CAAY4C,IAAKkB,GAAWc,WAQxCN,EAAOpE,UAAY,CACjB4E,UAAW3E,IAAUG,QAGvBgE,EAAO9C,aAAe,CACpBsD,UAAS,IAGIR,QCtCTS,UAAStH,IAAOuH,OAAVrH,WAAA,CAAAC,YAAA,iBAAAC,YAAA,YAAGJ,CAAH,0EAONwH,EAAS,SAAAnH,GAAkB,IAAfoH,EAAepH,EAAfoH,SACVlH,EAAOmH,EAAAnH,KAiBb,OACEyE,EAAAtE,EAAAC,cAAAqE,EAAAtE,EAAAiH,SAAA,KACE3C,EAAAtE,EAAAC,cAACiH,EAAD,CAAQd,MAAOvG,EAAK4C,KAAKG,aAAauE,SACtC7C,EAAAtE,EAAAC,cAAA,OACEK,MAAO,CACL8G,OAAM,SACNC,WAAY,IAGd/C,EAAAtE,EAAAC,cAAA,YAAO8G,GACPzC,EAAAtE,EAAAC,cAAC2G,EAAD,KACEtC,EAAAtE,EAAAC,cAACqH,EAAA,EAAD,CAAY5G,QAAQ,OACjB,IAAI6G,MAAOC,cADd,4CASVV,EAAO/E,UAAY,CACjBgF,SAAU/E,IAAUyF,KAAKrF,YAGZ0E","file":"component---src-templates-blog-template-js-720b06e2d23a7bda0d1a.js","sourcesContent":["import Typography from \"@material-ui/core/Typography\"\nimport { graphql } from \"gatsby\"\nimport React from \"react\"\nimport styled from \"styled-components\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst BlogBodyWrapper = styled.div`\n  min-width: 1400px;\n  padding-left: 200px;\n  padding-right: 200px;\n`\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <Layout>\n      <SEO title={frontmatter.title} />\n      {frontmatter.banner && (\n        <img\n          src={frontmatter.banner}\n          alt={frontmatter.title}\n          style={{ width: \"100%\", height: 450, objectFit: \"cover\" }}\n        />\n      )}\n      <BlogBodyWrapper>\n        <Typography variant=\"h4\" gutterBottom>\n          {frontmatter.title}\n        </Typography>\n        <Typography variant=\"h6\" gutterBottom style={{ color: \"#bdbdbd\" }}>\n          {frontmatter.date}\n        </Typography>\n        <Typography variant=\"subtitle1\" gutterBottom>\n          {frontmatter.desc}\n        </Typography>\n        <br />\n        <Typography\n          variant=\"subtitle1\"\n          gutterBottom\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      </BlogBodyWrapper>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        path\n        title\n        date\n        banner\n        desc\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Button from \"@material-ui/core/Button\"\nimport Popover from \"@material-ui/core/Popover\"\nimport { Link } from \"gatsby\"\nimport React from \"react\"\nimport styled from \"styled-components\"\n\nconst MenuButton = styled(Button)`\n  height: 110px;\n  padding-left: 15px !important;\n  padding-right: 15px !important;\n`\n\nconst MenuLink = styled(Link)`\n  color: black !important;\n  text-decoration: none !important;\n`\n\nconst HeaderMenu = ({ buttons, title }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  if (buttons.length === 1) {\n    return (\n      <MenuLink to={buttons[0].path}>\n        <MenuButton>{title}</MenuButton>\n      </MenuLink>\n    )\n  } else {\n    return [\n      <MenuButton\n        key=\"button\"\n        aria-controls=\"menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        {title}\n      </MenuButton>,\n      <Popover\n        id=\"menu\"\n        key=\"menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n      >\n        {buttons.map(({ title, path }, index) => (\n          <div key={index}>\n            <MenuLink to={path}>\n              <MenuButton onClick={handleClose} fullWidth={true}>\n                {title}\n              </MenuButton>\n            </MenuLink>\n          </div>\n        ))}\n      </Popover>,\n    ]\n  }\n}\n\nexport default HeaderMenu\n","import AppBar from \"@material-ui/core/AppBar\"\nimport Card from \"@material-ui/core/Card\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport styled from \"styled-components\"\n\nimport HeaderMenu from \"../components/headerMenu\"\n\nconst AppToolbar = styled(Toolbar)`\n  height: 110px;\n  background-color: white;\n`\n\nconst AppToolbarIcon = styled.div`\n  flex-grow: 1;\n  color: black;\n  text-decoration: none;\n`\n\nconst AppToolbarIconImage = styled.img`\n  margin-bottom: 0 !important;\n`\n\nconst MenuButtonWrapper = styled.div`\n  margin-right: 55px;\n`\n\nconst Header = ({ menus }) => (\n  <AppBar position=\"static\">\n    <Card>\n      <AppToolbar>\n        <AppToolbarIcon>\n          <Link to=\"/\">\n            <AppToolbarIconImage src=\"/header.png\" alt=\"home\" />\n          </Link>\n        </AppToolbarIcon>\n        <MenuButtonWrapper>\n          {menus.map((menu, index) => (\n            <HeaderMenu key={index} {...menu} />\n          ))}\n        </MenuButtonWrapper>\n      </AppToolbar>\n    </Card>\n  </AppBar>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport styled from \"styled-components\"\n\nimport Typography from \"@material-ui/core/Typography\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Footer = styled.footer`\n  height: 89px;\n  text-align: center;\n  padding-top: 29px;\n  text-transform: none;\n`\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          routes {\n            title\n            buttons {\n              title\n              path\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header menus={data.site.siteMetadata.routes} />\n      <div\n        style={{\n          margin: `0 auto`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <Footer>\n          <Typography variant=\"h6\">\n            {new Date().getFullYear()} Margaret Wong. All rights reserved.\n          </Typography>\n        </Footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}